// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AmountInputType {
  TOTAL           // 输入的是“总金额”
  PER_INSTALLMENT // 输入的是“每期支付金额”
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  name          String?
  image         String?
  emailVerified  DateTime?
  currency      String     @default("JPY")  // 自定义字段
  monthlyBudget Int?                        // 自定义字段
  expenses      Expense[]
  categories    Category[]
  createdAt     DateTime   @default(now())
  defaultRedirectPath String?
  subscriptions Subscription[]

  // 🔹 NextAuth 需要的字段
  accounts      Account[]
  sessions      Session[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  color    String
  userId   String
  user     User     @relation(fields: [userId], references: [id])

  parentId Int?
  parent    Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryHierarchy")
  expenses Expense[]
  subscriptions Subscription[]
  @@unique([name, userId, parentId])
}

model Expense {
  id         Int      @id @default(autoincrement())
  amount     Float
  currency   String   @default("JPY")
  date       DateTime @default(now())
  note       String?
  userId     String
  categoryId Int
  user       User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  isNextMonthPayment   Boolean          @default(false)   // 是否下个月支付（必填）
  isInstallment        Boolean          @default(false)   // 是否分期
  installmentCount     Int?                             // 分期次数（可选，null 表示一次性）
  amountInputType      AmountInputType @default(TOTAL)  // TOTAL=总金额，PER_INSTALLMENT=每期金额
  subscriptionId   Int?
  subscription     Subscription?      @relation(fields: [subscriptionId], references: [id])
  isAutoGenerated  Boolean @default(false) 
}

model Account {
  id                 Int     @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Subscription {
  id         Int     @id @default(autoincrement())

  //基本信息
  name       String 
  description String?
  amount     Float
  currency   String  @default("JPY")


  //时间规则
  billingDay  Int   @default(1)
  startDate   DateTime
  endDate     DateTime?

  userId      String
  categoryId  Int
  user        User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id])

  //状态管理
  isActive    Boolean  @default(true)

  //生成的支出记录
  expenses     Expense[]

  //元数据
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
